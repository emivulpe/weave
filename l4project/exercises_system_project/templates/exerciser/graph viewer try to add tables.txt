{% extends 'exerciser/teacher_interface_base.html' %}
{% load static %}
{% block links %} 	
	<link rel="stylesheet" type="text/css" href="{% static 'css/ui.dropdownchecklist.themeroller.css' %}" />
	<link rel="stylesheet" type="text/css" href="{% static 'css/jquery-ui-1.8.4.custom.css' %}" />
	{% endblock %}
{% block style %}
	<style>
		#container{
			min-width: 310px;
			height: 400px;
			margin: 0 auto;
		}
		.ui-autocomplete{
			margin:0;
			padding:0;
			width:100px;

		}
		
		.ui-menu-item{
			list-style-type:none;

		}
	</style>
{% endblock %}

{% block body_block %}
<div class="container" style="background:gray;width: 100%;">
	<select id="group_list" style="margin: 10px 5px 0 10px; padding: 5px; font-size: 12pt; font-weight: bold;">
		<option value="" disabled selected style="display:none;">Select group...</option>
		{% for group in groups %}
			<option value="{{group.name}}" >Group {{group.name}}</option>
		{% endfor %}
	</select>
<!--	
	<select id="application_list" style="margin: 10px 5px 10px 10px; padding: 5px; font-size: 12pt; font-weight: bold;">
		{% for application in applications %}
			<option id="id_{{application.name}}" value="{{application.name}}">{{application.name}}</option>
		{% endfor %}
	</select>
-->

	<select id="statistics_options" style="margin: 10px 5px 10px 10px; padding: 5px; font-size: 12pt; font-weight: bold;">
		<option value="" disabled selected style="display:none;">Select data type...</option>
		<option value="time">Average Time</option>
		<option value="answers">Question Answers</option>
		<option value="summary_data">Class Summary</option>
	</select>
	<span class="ui-widget">
		<input id="application" placeholder="Select application...">
	</span>

	<select id="question_list" style="max-width:250px;margin: 10px 5px 10px 10px; padding: 5px; font-size: 12pt; font-weight: bold;display:none;">
		<option value="" disabled selected style="display:none;">Select question...</option>
	</select>
	<select id="s1" multiple="multiple">
    <option value="a">Alice</option>
    <option value="b">Bob</option>
    <option value="c">Christian</option>
    <option value="d">Daniel</option>
</select>
	<button id="set_data_button" class="autocompare" style="margin: 10px 5px 10px 10px; padding: 5px; 
font-size: 12pt; font-weight: bold;">View data</button>
	<i class="fa fa-info-circle"></i><span class="landing-text">Please select!</span>
</div>
	<div id="container" style="width:100%; min-height:80vh; text-align: center;font-size: 12pt; font-weight: bold;"> </div>
	
	<table id="summary_data" border="1" style="display:none;"></table>

{% endblock %}

{% block javascripts %}
	<script src="/static/js/highcharts.js"></script>
	<script src="/static/js/exporting.js"></script>
	<script src="/static/js/customEvents.js"></script>

<script src="http://code.highcharts.com/modules/data.js"></script>


<!-- Additional files for the Highslide popup effect -->
<script type="text/javascript" src="http://www.highcharts.com/media/com_demo/highslide-full.min.js"></script>
<script type="text/javascript" src="http://www.highcharts.com/media/com_demo/highslide.config.js" charset="utf-8"></script>
<script type="text/javascript" src="/static/js/jquery-ui.js"></script>
<script type="text/javascript" src="/static/js/ui.dropdownchecklist-1.1-min.js"></script>
<link rel="stylesheet" type="text/css" href="http://www.highcharts.com/media/com_demo/highslide.css" />

	<script>
	
	
		{% autoescape off %}
		var app_questions_dict = {{app_questions_dict}};
		var applications = {{application_names}};
		{% endautoescape %}
		var apps_without_questions=[];
		var apps_with_questions=[];
		var legal_applications=applications; //apps that are good for the selected category (questions, average time)
		var selected_option="";

		for (var application in app_questions_dict) {
			if (app_questions_dict[application].length == 0){
				apps_without_questions.push(application);
			}
			else{
				apps_with_questions.push(application);
			}
		}
		console.log(apps_without_questions);
		

		var count=0;
		$(function () {
		
			var selected_application=$("#application").val();
			var selected_group=document.getElementById("group_list").value;
			

			console.log(selected_option + selected_application + selected_group);
			
			
			/*$('#application_list').on('change', function() {
				selected_application = document.getElementById("application_list").value;
				if(selected_option=="answers"){
					$("#question_list").empty();
					addQuestions(selected_application);
				}
			});
			
			$('#group_list').on('change', function() {
				selected_group = document.getElementById("group_list").value;
			});
			*/
			$('#statistics_options').on('change', function() {
				selected_option = document.getElementById("statistics_options").value;
				if (this.value=="answers"){
					$("#question_list").show();
					/*$( this ).after( "<select id='question_list' style='max-width:250px;margin: 10px 5px 10px 10px; padding: 5px; font-size: 12pt; font-weight: bold;'><option value='' disabled selected style='display:none;'>Select question...</option></select>" );
					for (var index in apps_without_questions) {
							$("#id_"+apps_without_questions[index]).wrap('<span/>'); //hide it-no questions (cross-browser compatible)
					}
					*/
					//legal_applications=apps_with_questions;
					//remove apps without questions, when enter app, on click of this show relevant questions, before that Select question...
				/*	$("#application_list > option:first").attr("selected", "selected"); 
					selected_application = document.getElementById("application_list").value;
					console.log("Sel app" + selected_application);
					console.log($("#application_list > option:first").val()+"FC");
					*/
					
					$( "#application" ).autocomplete('option', 'source', apps_with_questions);

				}
				
				else{
					//legal_applications=applications;
					$( "#application" ).autocomplete('option', 'source', applications);
					$("#question_list").hide();
					/*if ($("#question_list").length > 0){
						$("#question_list").remove();
					}
					
					for (var index in apps_without_questions) {
						$("#id_"+apps_without_questions[index]).unwrap(); //hide it-no questions (cross-browser compatible)
					}*/
				}
			});

$( "#application" ).blur(function() {
	if (selected_option=="answers"){
	
		selected_application=$("#application").val();
		addQuestions(selected_application);
	}
});
			// the button action
			$('#set_data_button').click(function () {

				$(".no_stats_info").remove();
				var categories=[];
				var sel_data=[];
				var chartType="";
				var question="";
				var xAxisTitle="Steps";
				var yAxisTitle="Seconds";
				var seriesName="Average time";
				console.log("%%%%%%%%%%%%%%%%%%%"+selected_option);
				selected_application=$("#application").val();
				selected_group = document.getElementById("group_list").value;
				console.log(selected_application);
				if(selected_option!="summary_data"){
					if(selected_option=="time"){
						chartType="line";
					}
					else{
						xAxisTitle="Choices";
						yAxisTitle="Times chosen";
						seriesName="Times chosen";
						chartType="column";
						question=document.getElementById("question_list").value;
						console.log("#############"+question+"###################");
					}
					console.log("time");
					var request = $.get('/exerciser/update_graph/', {app_name:selected_application, group:selected_group, info_type:selected_option,question:question})
					//console.log("here");
					request.done(function(selected_data) {
						console.log("here");
						// when we get here, the request has succeeded.
						// this should mean that data is now the data from the ajax request (i.e. from the view above)

						console.log("sel" + sel_data);
						console.log("data " + sel_data);
						if(Object.getOwnPropertyNames(selected_data).length != 0){
							sel_data=selected_data["data"];
							questionSteps=selected_data["question_steps"];
							console.log(questionSteps);
							console.log("data>0");
							if(selected_option=="time"){
								for (i = 0; i < sel_data.length; i++) { 
									if(questionSteps.indexOf(i)  != -1){
										categories[i]="? " + (i+1);
									}
									else{
										categories[i]=(i+1);
									}
								}
							}
							else{
								var option_categories=[];
								var option_data=[];
								for (i = 0; i < sel_data.length; i++) { 
									for (var option in sel_data[i]) {
									  option_categories.push(option);
									  console.log(option);
									  option_data.push(sel_data[i][option]);
									  console.log(sel_data[i][option]);
									}
								}
								sel_data=option_data;
								categories=option_categories;
								console.log(sel_data);
								console.log(categories);
								
							}
											
							$('#container').highcharts({
											chart: {
												type: chartType
											},
											title: {
												text: selected_application + "- Group " + selected_group,
		
											},
											subtitle: {
												text: question
											},
											xAxis: {
												categories:categories,
												title:{
													text: xAxisTitle
												}
											},
											yAxis: {
												title:{
													text: yAxisTitle
												}
											},
											
											plotOptions: {
												series: {
												
													dataLabels: {
													enabled: true,
													formatter: function(){
														if (chartType == "line"){
															return Highcharts.numberFormat(this.y,1) + ' s / ' + this.point.next + ' / ' + this.point.prev 
														} 
														else {
															return this.y + ' times'
														}
													}
													},

													cursor: 'pointer',
													point: {
														events: {
															click: function (e) {
																if(questionSteps.indexOf(this.x)!=-1){
																	hs.htmlExpand(null, {
																		pageOrigin: {
																			x: e.pageX || e.clientX,
																			y: e.pageY || e.clientY
																		},
																		headingText: this.series.name,
																		maincontentText: "	<div id='cont_"+count+"'> </div><br/> ",
																		width: 600,
																		height:330
																	});
																	getQuestionData(selected_application,selected_group,this.x);
																}
																else{
																	hs.htmlExpand(null, {
																			pageOrigin: {
																				x: e.pageX || e.clientX,
																				y: e.pageY || e.clientY
																			},
																			headingText: "Step Expanation",
																			maincontentText: this.explanation
																		});
																}
															}
														}
													},
													marker: {
														lineWidth: 1
													}
												}
											},

											series: [{
												showInLegend: false,
												name: seriesName,
												data: sel_data,
											}],
											tooltip: {
												formatter: function() {
													if(chartType=="line"){
														return ' ' +
														'Average time: ' + + Highcharts.numberFormat(this.point.y, 1) +'<br />'+
														'Via next: ' + this.point.next + '<br />'+
														'Via back: ' + this.point.prev + '<br />' +
														'Expanation: ' + this.point.explanation_start + '<br />';
													}
													else {
														return 'Times Chosen: ' + this.point.y;
													}
												}
												
											}
							});
							
							
							

						}
						
								
						else{
							$('#container').find('.highcharts-container').hide();
							$('#container').html("<div class='no_stats_info'><br\><br\><br\><br\><br\><br\><i class='fa fa-asterisk' style='color:red'></i><span style='color:red'>There are no statistics for the current selection</span><div>");
						}
					});
								
				}
				else{
					console.log("TODO TABLE");
					var selected_applications=["ClockExample","HorizontalLines","pentagonToShape"];
					var request = $.get('/exerciser/populate_summary_table/', {application:selected_application, group:selected_group, year:2014})
					//console.log("here");
					//var summary_data;
					request.done(function(summary_data) {
						console.log("DONE");
						//summary_data=summary_data;
						console.log(summary_data);
						for (var app in summary_data) {
							if (summary_data.hasOwnProperty(app)) {
								console.log(summary_data[app]);
								var studentInfo=summary_data[app];
								for (i in studentInfo){
									console.log(studentInfo[i]);
									studentInfoDict=studentInfo[i];
									for (studentId in studentInfoDict){
										console.log(studentInfoDict[studentId]+"!!!!");
										var data=studentInfoDict[studentId];
										for (info in data){
											console.log(info);
										}
										
									}
								}
							}
						}

					});
					//console.log(summary_data);
					//$('#container').append("<table border='1'><tr><td>test</td></tr></table>");
					$("#summary_data").show();
				}

			});

		});

function getQuestionData(selected_application,selected_group,selected_step){

	var request = $.get('/exerciser/question_graph/', {app_name:"HorizontalLines", group:"f",step:selected_step});


	request.done(function(selected_data) {
		console.log("request done");
		if(Object.getOwnPropertyNames(selected_data).length != 0){
			sel_data=selected_data["data"];
			questionText=selected_data["question"];
			console.log(questionText);
			console.log("in custom");
			var option_categories=[];
			var option_data=[];
			for (i = 0; i < sel_data.length; i++) { 
				for (var option in sel_data[i]) {
					option_categories.push(option);
					console.log(option);
					option_data.push(sel_data[i][option]);
					console.log(sel_data[i][option]);
				}
			}
			sel_data=option_data;
			categories=option_categories;

       		$('#cont_'+count).highcharts({
				chart: {
					type: "column"
				},
				title: {
					text: selected_application + "- Group " + selected_group,
				},
				subtitle: {
					text: questionText
				},
				xAxis: {
					categories:option_categories,
					title:{
						text: "answers"
					}
				},
				yAxis: {
					title:{
						text: "Times chosen"
					}
				},
				series: [{
					showInLegend: false,
					name: "Times chosen",
					data: sel_data,
				}]
			});
			
	
		}
		count++;
	});

}		

function addQuestions(selected_application){
	$("#question_list").empty();
	for (var question_index in app_questions_dict[selected_application]){
		var question = app_questions_dict[selected_application][question_index];
		var option="<option value='" + question +"' >"+question + "</option>";
		console.log(question);
		$("#question_list").append(option);
	}
}


 $(function() {


		$( "#application" ).autocomplete({minLength: 0,
		  source: applications
		}).focus(function() {
		$(this).autocomplete("search", "");});

});



	</script>
{% endblock %}

